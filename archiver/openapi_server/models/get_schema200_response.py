from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from archiver.openapi_server.models.base_model import Model
from archiver.openapi_server.models.get_schema200_response_metrics_inner import GetSchema200ResponseMetricsInner
from archiver.openapi_server import util

from archiver.openapi_server.models.get_schema200_response_metrics_inner import GetSchema200ResponseMetricsInner  # noqa: E501

class GetSchema200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metrics=None):  # noqa: E501
        """GetSchema200Response - a model defined in OpenAPI

        :param metrics: The metrics of this GetSchema200Response.  # noqa: E501
        :type metrics: List[GetSchema200ResponseMetricsInner]
        """
        self.openapi_types = {
            'metrics': List[GetSchema200ResponseMetricsInner]
        }

        self.attribute_map = {
            'metrics': 'metrics'
        }

        self._metrics = metrics

    @classmethod
    def from_dict(cls, dikt) -> 'GetSchema200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The getSchema_200_response of this GetSchema200Response.  # noqa: E501
        :rtype: GetSchema200Response
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metrics(self) -> List[GetSchema200ResponseMetricsInner]:
        """Gets the metrics of this GetSchema200Response.


        :return: The metrics of this GetSchema200Response.
        :rtype: List[GetSchema200ResponseMetricsInner]
        """
        return self._metrics

    @metrics.setter
    def metrics(self, metrics: List[GetSchema200ResponseMetricsInner]):
        """Sets the metrics of this GetSchema200Response.


        :param metrics: The metrics of this GetSchema200Response.
        :type metrics: List[GetSchema200ResponseMetricsInner]
        """
        if metrics is None:
            raise ValueError("Invalid value for `metrics`, must not be `None`")  # noqa: E501

        self._metrics = metrics
