from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from archiver.openapi_server.models.base_model import Model
from archiver.openapi_server import util


class NodeRef(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ip=None, name=None):  # noqa: E501
        """NodeRef - a model defined in OpenAPI

        :param ip: The ip of this NodeRef.  # noqa: E501
        :type ip: str
        :param name: The name of this NodeRef.  # noqa: E501
        :type name: str
        """
        self.openapi_types = {
            'ip': str,
            'name': str
        }

        self.attribute_map = {
            'ip': 'ip',
            'name': 'name'
        }

        self._ip = ip
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'NodeRef':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NodeRef of this NodeRef.  # noqa: E501
        :rtype: NodeRef
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ip(self) -> str:
        """Gets the ip of this NodeRef.

        IPv4/IPv6  # noqa: E501

        :return: The ip of this NodeRef.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip: str):
        """Sets the ip of this NodeRef.

        IPv4/IPv6  # noqa: E501

        :param ip: The ip of this NodeRef.
        :type ip: str
        """
        if ip is None:
            raise ValueError("Invalid value for `ip`, must not be `None`")  # noqa: E501

        self._ip = ip

    @property
    def name(self) -> str:
        """Gets the name of this NodeRef.

        Optional display name  # noqa: E501

        :return: The name of this NodeRef.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this NodeRef.

        Optional display name  # noqa: E501

        :param name: The name of this NodeRef.
        :type name: str
        """

        self._name = name
