services:
  timescaledb:
    image: timescale/timescaledb:latest-pg16
    container_name: timescaledb
    environment:
      - POSTGRES_DB=perfsonar
      - POSTGRES_USER=grafana_writer
      - POSTGRES_PASSWORD=change_me
    #ports: ["5432:5432"]
    network_mode: host
    volumes:
      - ./tsdb_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U grafana_writer -d perfsonar"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    #ports: ["3000:3000"]
    network_mode: host
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    # Ensure Grafana waits until the database service reports healthy
    depends_on:
      timescaledb:
        condition: service_healthy
    volumes:
      - ./grafana_data:/var/lib/grafana
      # --- NEW PROVISIONING MOUNTS ---
      # Datasources provisioning configuration file
      - ./provisioning/datasources:/etc/grafana/provisioning/datasources
      # Dashboards provisioning configuration file
      - ./provisioning/dashboards:/etc/grafana/provisioning/dashboards
    restart: always

  archiver:
    build:
      context: .
      dockerfile: Dockerfile
    image: kthare10/archiver:1.0.0
    container_name: archiver
    depends_on:
      - grafana
    restart: always
    #ports: ["3500:3500"]
    network_mode: host
    environment:
      - APP_CONFIG_PATH=/etc/archiver/config/config.yml
    volumes:
      - ./archiver/config.yml:/etc/archiver/config/config.yml
      - ./logs/:/var/log/archiver

  nginx:
    image: library/nginx:1
    container_name: archiver-nginx
    depends_on:
      - archiver
    #ports: ["8443:443"]
    network_mode: host
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certs/fullchain.pem:/etc/ssl/public.pem
      - ./certs/privkey.pem:/etc/ssl/private.pem
      - /opt/data/production/logs/nginx/archiver:/var/log/nginx
    restart: always
